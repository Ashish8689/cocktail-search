{"version":3,"sources":["Drinks.js","App.js","reportWebVitals.js","index.js"],"names":["Drinks","drink","strDrinkThumb","strDrink","strInstructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","className","src","alt","App","useState","cocktail","setcocktail","input","setinput","selectDrinks","setselectDrinks","FilterDrinks","setFilterDrinks","useEffect","a","axios","get","request","data","drinks","fetchData","unique","map","item","strCategory","filter","value","index","self","indexOf","type","onChange","e","target","Filter_Drinks","x","unique_drinks","cock","idDrink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA+BeA,MA5Bf,YAA0B,IAATC,EAAQ,EAARA,MAEPC,EAAqHD,EAArHC,cAAcC,EAAuGF,EAAvGE,SAASC,EAA8FH,EAA9FG,gBAAgBC,EAA8EJ,EAA9EI,eAAeC,EAA+DL,EAA/DK,eAAeC,EAAgDN,EAAhDM,eAAeC,EAAiCP,EAAjCO,eAAeC,EAAkBR,EAAlBQ,eAEzG,OAEQ,sBAAKC,UAAU,QAAf,UACG,qBAAKA,UAAU,gBAAf,SACG,qBAAKC,IAAKT,EAAeU,IAAKT,MAGnC,oBAAIO,UAAU,aAAd,SAA4BP,IAE5B,sBAAKO,UAAU,aAAf,UACI,+BAAI,wCAAJ,MAAyBP,KACzB,+BAAI,wCAAJ,MAAyBC,EAAzB,OACA,+BAAI,6CAAJ,MAA8BC,EAA9B,SAAoDC,EAApD,IACGC,EADH,IAEGC,EAFH,IAGGC,YC4ELI,MA7Ff,WAAgB,IAAD,EAEkBC,mBAAS,IAF3B,mBAENC,EAFM,KAEGC,EAFH,OAGYF,mBAAS,IAHrB,mBAGNG,EAHM,KAGAC,EAHA,OAI0BJ,mBAAS,OAJnC,mBAINK,EAJM,KAIOC,EAJP,OAK0BN,mBAAS,IALnC,mBAKNO,EALM,KAKOC,EALP,KAObC,qBAAU,WAAI,4CAEZ,4BAAAC,EAAA,sEACwBC,IAAMC,IAAN,mEAAsET,IAD9F,cACQU,EADR,OAEEX,EAAYW,EAAQC,KAAKC,QAF3B,kBAGSF,GAHT,4CAFY,uBAAC,WAAD,wBAQZG,KACA,CAACb,IAMC,IAAMc,EAAM,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAUiB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,eACzCC,QAAO,SAACC,EAAOC,EAAOC,GAAf,OAAwBA,EAAKC,QAAQH,KAAWC,KAe5D,OACE,qBAAK3B,UAAU,MAAf,SAEE,sBAAKA,UAAU,gBAAf,UAEG,sBAAKA,UAAU,kBAAf,UAGG,uBAAOA,UAAU,QAAQ8B,KAAK,OAAOJ,MAAOnB,EAAOwB,SAAU,SAACC,GAAD,OAAKxB,EAASwB,EAAEC,OAAOP,UAIpF,yBAAQA,MAAOjB,EAAcsB,SAtBtB,SAACC,GACdtB,EAAgBsB,EAAEC,OAAOP,OAEzB,IAAMQ,EAAe7B,EAASoB,QAAO,SAAAU,GAAC,OAAIA,EAAEX,cAAgBf,KAC5DG,EAAgBsB,IAkBV,UACE,wBAAQR,MAAM,MAAd,iBADF,OAGGL,QAHH,IAGGA,OAHH,EAGGA,EAAQC,KAAI,SAACc,EAAcT,GACxB,OAAO,wBAAS3B,UAAU,SAAqB0B,MAAOU,EAA/C,SAA+DA,GAA9BT,YAS9B,QAAjBlB,EAECJ,EACG,qBAAKL,UAAU,kBAAf,SACIK,EAASiB,KAAI,SAACe,GACX,OAAO,cAAC,EAAD,CAA2B9C,MAAO8C,GAArBA,EAAKC,cAIhC,oBAAItC,UAAU,SAAd,iCAGFW,EACC,qBAAKX,UAAU,kBAAf,SACGW,EAAaW,KAAI,SAAAG,GAChB,OAAO,cAAC,EAAD,CAA6BlC,MAAOkC,GAAvBA,EAAOa,cAI/B,oBAAItC,UAAU,SAAd,uCC3ECuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a68f7777.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Drinks({drink}) {\r\n\r\n    const{strDrinkThumb,strDrink,strInstructions,strIngredient1,strIngredient2,strIngredient3,strIngredient4,strIngredient5} = drink\r\n\r\n    return (\r\n       \r\n            <div className=\"drink\">\r\n               <div className=\"img-container\">\r\n                  <img src={strDrinkThumb} alt={strDrink}/>\r\n               </div>\r\n\r\n             <h3 className=\"drink-name\">{strDrink}</h3>\r\n\r\n             <div className=\"drink-info\">\r\n                 <h3><span>Name</span> : {strDrink}</h3>\r\n                 <h3><span>Info</span> : {strInstructions} </h3>\r\n                 <h3><span>Ingrident</span> : {strIngredient1},     {strIngredient2},\r\n                   {strIngredient3},\r\n                   {strIngredient4},\r\n                   {strIngredient5}\r\n                 </h3>\r\n             </div>\r\n            </div >\r\n\r\n    )     \r\n\r\n}\r\n\r\nexport default Drinks\r\n","import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Drinks from './Drinks';\n\nfunction App() {\n\n  const [cocktail,setcocktail] = useState([]);    // Getting Api data\n  const [input,setinput] = useState('');          //  Setting input from user\n  const [selectDrinks,setselectDrinks] = useState(\"all\");   //setting select and set all as default \n  const [FilterDrinks,setFilterDrinks] = useState([]);      // Getting filtered elements \n\n  useEffect(()=>{\n    \n    async function fetchData(){\n      const request = await axios.get(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${input}`);\n      setcocktail(request.data.drinks);        \n      return request;\n    }\n\n    fetchData();\n  },[input]);\n\n  \n\n  // **********  Get unique drinks value  *****************\n   \n      const unique = cocktail?.map(item => item.strCategory)\n      .filter((value, index, self) => self.indexOf(value) === index);\n\n    \n\n  //  ***************  Filter handler  ****************** \n    const filter = (e) =>{\n      setselectDrinks(e.target.value);\n      \n      const Filter_Drinks= cocktail.filter(x => x.strCategory === selectDrinks);\n      setFilterDrinks(Filter_Drinks);\n  }\n\n\n    \n\n  return (\n    <div className=\"app\">\n\n      <div className=\"app-container\">\n         \n         <div className=\"input-container\">\n\n           {/* ********** Search box  ************* */}\n            <input className=\"input\" type=\"text\" value={input} onChange={(e)=>setinput(e.target.value)} />  \n \n              \n           {/* ********** filter box  ************* */}\n            <select value={selectDrinks} onChange={filter}>\n              <option value=\"all\">All</option>\n\n              {unique?.map((unique_drinks,index) =>{\n                  return <option  className=\"option\" key={index} value={unique_drinks}>{unique_drinks}</option>\n              })}\n            </select>\n\n         </div>\n\n\n           {/* **********  Drinks Com[onent  ***********] */}\n\n          {selectDrinks === \"all\" ?\n\n           (cocktail? \n              (<div className=\"drink-container\">\n                  {cocktail.map((cock) =>{\n                      return <Drinks key={cock.idDrink} drink={cock} /> \n                  })}\n              </div>) :\n\n               <h1 className=\"result\">No Result Found!!!!</h1>\n           ) :\n                \n           ( FilterDrinks? \n              <div className=\"drink-container\">\n                {FilterDrinks.map(filter =>{\n                  return <Drinks key={filter.idDrink} drink={filter} />  \n                })}\n             </div>  :\n\n              <h1 className=\"result\">No Result Found!!!!</h1>\n           )\n          }\n\n         \n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}